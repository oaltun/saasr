"""reinit

Revision ID: 44a5aac6e75a
Revises: 658b36d8814c
Create Date: 2023-05-23 08:39:21.391461-07:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '44a5aac6e75a'
down_revision = '658b36d8814c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('saasr_billing_cycle',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('billing_period_in_months', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('remind_term_end_in_days', sa.Integer(), nullable=False),
    sa.Column('grace_period_duration_in_days', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('saasr_plan',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('features', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('saasr_user',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_saasr_user_email'), 'saasr_user', ['email'], unique=True)
    op.create_index(op.f('ix_saasr_user_id'), 'saasr_user', ['id'], unique=False)
    op.create_table('saasr_billing_info',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('gsm_number', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('user_is_company_representer', sa.Boolean(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('company_tax_number', sa.String(), nullable=True),
    sa.Column('company_tax_office', sa.String(), nullable=True),
    sa.Column('company_address_country', sa.String(), nullable=True),
    sa.Column('company_address_state', sa.String(), nullable=True),
    sa.Column('company_address_city', sa.String(), nullable=True),
    sa.Column('company_address_street_address', sa.String(), nullable=True),
    sa.Column('company_address_postal_code', sa.String(), nullable=True),
    sa.Column('billing_address_country', sa.String(), nullable=False),
    sa.Column('billing_address_state', sa.String(), nullable=True),
    sa.Column('billing_address_city', sa.String(), nullable=False),
    sa.Column('billing_address_street_address', sa.String(), nullable=False),
    sa.Column('billing_address_postal_code', sa.String(), nullable=True),
    sa.Column('buyer_address_country', sa.String(), nullable=False),
    sa.Column('buyer_address_state', sa.String(), nullable=True),
    sa.Column('buyer_address_city', sa.String(), nullable=False),
    sa.Column('buyer_address_street_address', sa.String(), nullable=False),
    sa.Column('buyer_address_postal_code', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['saasr_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saasr_credit_card',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('iyzico_credit_card_token_id', sa.String(), nullable=False),
    sa.Column('iyzico_credit_card_user_key', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['saasr_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saasr_price',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('plan_id', sa.String(), nullable=False),
    sa.Column('billing_cycle_id', sa.String(), nullable=False),
    sa.Column('price_per_month', sa.Numeric(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['billing_cycle_id'], ['saasr_billing_cycle.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['plan_id'], ['saasr_plan.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('plan_id', 'billing_cycle_id')
    )
    op.create_index(op.f('ix_saasr_price_id'), 'saasr_price', ['id'], unique=False)
    op.create_table('saasr_support_issue',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('owner_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('is_closed', sa.Boolean(), nullable=False),
    sa.Column('closed_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('closer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['closer_id'], ['saasr_user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['saasr_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saasr_team',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('plan_id', sa.String(), nullable=True),
    sa.Column('plan_id_next_term', sa.String(), nullable=True),
    sa.Column('billing_cycle_id', sa.String(), nullable=True),
    sa.Column('billing_cycle_id_next_term', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('number_of_licenses', sa.Integer(), nullable=True),
    sa.Column('number_of_licenses_next_term', sa.Integer(), nullable=False),
    sa.Column('recurring_billing_is_on', sa.Boolean(), nullable=False),
    sa.Column('term_end_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['billing_cycle_id'], ['saasr_billing_cycle.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['plan_id'], ['saasr_plan.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saasr_user_secret',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('is_verification', sa.Boolean(), nullable=False),
    sa.Column('is_reset', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('valid_for_hours', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['saasr_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'token')
    )
    op.create_table('saasr_purchase',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('purchase_number', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('team_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('paid_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('number_of_licenses', sa.Integer(), nullable=False),
    sa.Column('payment_amount', sa.Numeric(), nullable=False),
    sa.Column('iyzico_sent_json', sa.String(), nullable=True),
    sa.Column('iyzico_returned_json', sa.String(), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('is_refunded', sa.Boolean(), nullable=False),
    sa.Column('iyzico_paymentId', sa.String(), nullable=True),
    sa.Column('payment_transaction_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['saasr_team.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['saasr_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('purchase_number')
    )
    op.create_table('saasr_support_message',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('issue_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('owner_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['saasr_support_issue.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['saasr_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saasr_team_invitation',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('team_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('inviter_user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['inviter_user_id'], ['saasr_user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['saasr_team.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('email', 'is_admin'),
    sa.UniqueConstraint('id')
    )
    op.create_table('saasr_team_participation',
    sa.Column('team_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('recurring_payer', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['saasr_team.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['saasr_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('saasr_team_participation')
    op.drop_table('saasr_team_invitation')
    op.drop_table('saasr_support_message')
    op.drop_table('saasr_purchase')
    op.drop_table('saasr_user_secret')
    op.drop_table('saasr_team')
    op.drop_table('saasr_support_issue')
    op.drop_index(op.f('ix_saasr_price_id'), table_name='saasr_price')
    op.drop_table('saasr_price')
    op.drop_table('saasr_credit_card')
    op.drop_table('saasr_billing_info')
    op.drop_index(op.f('ix_saasr_user_id'), table_name='saasr_user')
    op.drop_index(op.f('ix_saasr_user_email'), table_name='saasr_user')
    op.drop_table('saasr_user')
    op.drop_table('saasr_plan')
    op.drop_table('saasr_billing_cycle')
    # ### end Alembic commands ###
